- name: Ubuntu - Conditional system reboot
  hosts: all
  gather_facts: true

  tasks:

    - name: Gather the package facts
      become: false
      ansible.builtin.package_facts:
        manager: apt

    - name: Install packages
      when: "'needrestart' not in ansible_facts.packages"
      block:

        - name: Update package repositories cache
          ansible.builtin.include_role:
            name: packages_update_cache

        - name: Install needrestart releated packages
          ansible.builtin.include_role:
            name: packages_needrestart

    - name: Check if system reboot is required
      ansible.builtin.include_role:
        name: system_reboot_check

    - name: Check if service restart is required
      when: ubuntu_services_reboot | default(False)
      ansible.builtin.include_role:
        name: services_restart_check

    - name: Display reboot requirement status
      when: (ubuntu_reboot_needed | default(False))
            or ((ubuntu_services_reboot | default(False)) and ((ubuntu_services_to_restart | default([])) | length > 0))
      become: false
      ansible.builtin.debug:
        msg: "SYSTEM REBOOT IS NEEDED{{ ' BUT NOT ALLOWED' if (ubuntu_reboot_allowed | default(False)) == False }}"

    - name: Reboot block
      when: ((ubuntu_reboot_needed | default(False)) or ((ubuntu_services_reboot | default(False)) and ((ubuntu_services_to_restart | default([])) | length > 0)))
              and (ubuntu_reboot_allowed | default(False))
      block:

        - name: Perform system reboot
          ansible.builtin.include_role:
            name: system_reboot

        - name: Confirm successful system reboot
          become: false
          ansible.builtin.debug:
            msg: "SYSTEM WAS SUCCESSFULLY REBOOTED"
          failed_when: not (ubuntu_reboot_successfull | default(False))
