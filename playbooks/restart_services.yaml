- name: Ubuntu Maintenance Collection - Restart services
  hosts: all
  gather_facts: true

  tasks:

    - name: Gather the package facts
      become: false
      ansible.builtin.package_facts:
        manager: apt

    - name: Installation block
      when: "'needrestart' not in ansible_facts.packages"
      block:

        - name: Run packages_update_cache role
          ansible.builtin.include_role:
            name: packages_update_cache

        - name: Run packages_needrestart role
          ansible.builtin.include_role:
            name: packages_needrestart

    - name: Run services_restart_check role
      ansible.builtin.include_role:
        name: services_restart_check

    - name: Store initial list of services needing restart
      become: false
      ansible.builtin.set_fact:
        _umc_needrestart_first_check: "{{ _umc_services_to_restart }}"

    - name: Display services that need to be restarted
      when: _umc_needrestart_first_check | length > 0
      become: false
      ansible.builtin.debug:
        msg: "SERVICES TO RESTART: {{ _umc_needrestart_first_check | length }} ({{ _umc_needrestart_first_check | join(', ') }})"

    - name: Run services_restart role
      when: (umc_services_restart_allowed | default(False)) and (_umc_needrestart_first_check | length > 0)
      ansible.builtin.include_role:
        name: services_restart
        public: true

    - name: Run services_restart_check role
      when: _umc_needrestart_first_check | length > 0
      ansible.builtin.include_role:
        name: services_restart_check

    - name: Store updated list of services still needing restart
      when: _umc_needrestart_first_check | length > 0
      become: false
      ansible.builtin.set_fact:
        _umc_needrestart_second_check: "{{ _umc_services_to_restart }}"

    - name: Display services that were not restarted
      when: (_umc_needrestart_second_check | default([])) | length > 0
      become: false
      ansible.builtin.debug:
        msg: "SERVICES STILL TO RESTART: {{ _umc_needrestart_second_check | length }} ({{ _umc_needrestart_second_check | join(', ') }})"

    - name: Ensure that required facts are defined outside Jinja
      become: false
      ansible.builtin.set_fact:
        umc_services_restart_allowed: "{{ umc_services_restart_allowed | default(False) }}"

    - name: Display restart summary
      when: _umc_needrestart_first_check | length > 0
      become: false
      ansible.builtin.debug:
        msg:
          "RESTARTED SERVICES: {{ ((_umc_needrestart_first_check | length) - (_umc_needrestart_second_check | length)) if umc_services_restart_allowed else 0 }}
          / {{ _umc_needrestart_first_check | length }}{{ ' (NOT ALLOWED)' if umc_services_restart_allowed == False else '' }}"
